//////////////////////////////////////////////////////////////////////
// Light.cpp: implementation of the CLight class.
//
// Copyright (C) 2000-2001
// $Id$
//////////////////////////////////////////////////////////////////////

// pre-compiled headers
#include "stdafx.h"

// OpenGL includes
#include <gl/gl.h>

#ifdef D3D8
#include <d3dx8.h>
#endif

// class declaration
#include "Light.h"

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// CLight::CLight
// 
// constructs a light object
//////////////////////////////////////////////////////////////////////
CLight::CLight()
{
#ifdef D3D8
	// clear the base structure
    ZeroMemory( (D3DLIGHT8 *) this, sizeof(D3DLIGHT8) );

	// set to a directional light
	Type = D3DLIGHT_DIRECTIONAL;
#endif
}

//////////////////////////////////////////////////////////////////////
// CLight::~CLight
// 
// destroys the light object
//////////////////////////////////////////////////////////////////////
CLight::~CLight()
{
}

//////////////////////////////////////////////////////////////////////
// CLight::GetPosition
// 
// returns the position of the light
//////////////////////////////////////////////////////////////////////
CVectorD<3> CLight::GetPosition() const
{
#ifdef D3D8
	return CVectorD<3>(Direction.x, Direction.y, Direction.z);
#else
	return CVectorD<3>();
#endif
}

//////////////////////////////////////////////////////////////////////
// CLight::SetPosition
// 
// sets the position of the light
//////////////////////////////////////////////////////////////////////
void CLight::SetPosition(const CVectorD<3>& vPos)
{
#ifdef D3D8
	Direction.x = vPos[0];
	Direction.y = vPos[1];
	Direction.z = vPos[2];
#endif
}

//////////////////////////////////////////////////////////////////////
// CLight::GetDiffuseColor
// 
// returns the diffuse color for the light
//////////////////////////////////////////////////////////////////////
COLORREF CLight::GetDiffuseColor() const
{
#ifdef D3D8
	return RGB(255.0f * Diffuse.r, 255.0f * Diffuse.g, 
		255.0f * Diffuse.b);
#else
	return RGB(255, 255, 255);
#endif
}

//////////////////////////////////////////////////////////////////////
// CLight::SetDiffuseColor
// 
// sets the diffuse color for the light
//////////////////////////////////////////////////////////////////////
void CLight::SetDiffuseColor(COLORREF color)
{
#ifdef D3D8
    Diffuse.r  = (float) GetRValue(color) / 255.0f; 
    Diffuse.g  = (float) GetGValue(color) / 255.0f; 
    Diffuse.b  = (float) GetBValue(color) / 255.0f;
#endif
}
