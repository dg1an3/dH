//////////////////////////////////////////////////////////////////////
// Light.cpp: implementation of the CLight class.
//
// Copyright (C) 2000-2001
// $Id$
//////////////////////////////////////////////////////////////////////

// pre-compiled headers
#include "stdafx.h"

// OpenGL includes
#include <gl/gl.h>

// class declaration
#include "Light.h"

//////////////////////////////////////////////////////////////////////
// array to store identifiers for allowed lights
//////////////////////////////////////////////////////////////////////
static GLenum arrLightID[] =
{
	GL_LIGHT0, GL_LIGHT1, GL_LIGHT2, GL_LIGHT3,
	GL_LIGHT4, GL_LIGHT5, GL_LIGHT6, GL_LIGHT7,
};

//////////////////////////////////////////////////////////////////////
// Construction/Destruction
//////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////
// CLight::CLight
// 
// constructs a light object
//////////////////////////////////////////////////////////////////////
CLight::CLight()
	: m_diffuseColor(RGB(160, 160, 160))
{
}

//////////////////////////////////////////////////////////////////////
// CLight::~CLight
// 
// destroys the light object
//////////////////////////////////////////////////////////////////////
CLight::~CLight()
{
}

//////////////////////////////////////////////////////////////////////
// CLight::GetPosition
// 
// returns the position of the light
//////////////////////////////////////////////////////////////////////
const CVector<3>& CLight::GetPosition() const
{
	return m_vPosition;
}

//////////////////////////////////////////////////////////////////////
// CLight::SetPosition
// 
// sets the position of the light
//////////////////////////////////////////////////////////////////////
void CLight::SetPosition(const CVector<3>& vPos)
{
	m_vPosition = vPos;
}

//////////////////////////////////////////////////////////////////////
// CLight::GetDiffuseColor
// 
// returns the diffuse color for the light
//////////////////////////////////////////////////////////////////////
COLORREF CLight::GetDiffuseColor() const
{
	return m_diffuseColor;
}

//////////////////////////////////////////////////////////////////////
// CLight::SetDiffuseColor
// 
// sets the diffuse color for the light
//////////////////////////////////////////////////////////////////////
void CLight::SetDiffuseColor(COLORREF color)
{
	m_diffuseColor = color;
}

//////////////////////////////////////////////////////////////////////
// CLight::TurnOn
// 
// turns on the light for the current OpenGL context
//////////////////////////////////////////////////////////////////////
void CLight::TurnOn(int nLightNum)
{
	// enable lighting
	glEnable(GL_LIGHTING);

	// set the light's direction
	GLfloat dir[4];
	dir[0] = (float) GetPosition()[0];
	dir[1] = (float) GetPosition()[1];
	dir[2] = (float) GetPosition()[2];
	dir[3] = 0.0f;

	// call the light position
	glLightfv(arrLightID[nLightNum], GL_POSITION, dir);

	// set the light's diffuse color
	GLfloat diffuse[4];
	diffuse[0] = (float) GetRValue(GetDiffuseColor()) / 255.0f;
	diffuse[1] = (float) GetGValue(GetDiffuseColor()) / 255.0f;
	diffuse[2] = (float) GetBValue(GetDiffuseColor()) / 255.0f;
	diffuse[3] = 1.0f;
	glLightfv(arrLightID[nLightNum], GL_DIFFUSE, diffuse);

	// enable this light
	glEnable(arrLightID[nLightNum]);
}
